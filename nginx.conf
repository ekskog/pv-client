user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Map to exclude health check logs
    map $request_uri $loggable {
        ~^/$              0;  # Don't log health checks to root
        ~^/health$        0;  # Don't log health checks to /health
        default           1;
    }

    # Also check user agent for k8s health checks
    map $http_user_agent $k8s_healthcheck {
        ~k8s-healthcheck  0;
        default           1;
    }

    # Combined condition - log only if both conditions are true
    map "$loggable:$k8s_healthcheck" $should_log {
        "1:1"   1;
        default 0;
    }

    access_log /var/log/nginx/access.log main if=$should_log;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint for API services - proxy to upstream
        location /health {
           return 200 "OK\n";
           add_header Content-Type text/plain;
        }

        # Handle Vue.js routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
